app:
  name: homework-app
  servicePortName: app-port
  baseHost: arch.homework
  port: 8000
  portName: web
  servicePort: 8080
  serviceProtocol: TCP
  image: russbalabanov/docker-homework:latest
  liveness:
    path: /health
    initialDelaySeconds: 5
    periodSeconds: 15
    failureThreshold: 1
  deployment:
    replicas: 3
    update:
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0

db:
  image: postgres:14-alpine #Not the latest version, but pretty stable
  secretName: db-root-password
  port: 5432
  label: postgres
  cfgName:  postgres-config
  name: app

  service:
    name: app-db-service
    port: 5355
    externalPort: 32355

  volume:
    type: local # Sets PV's type to local
    storageClassName: manual
    size: 2Gi
    name: pg-pv
    hostPath: /mnt/db
    accessModes:
      - ReadWriteMany
    mount:
      path: /var/lib/postgresql/data
      name: postgresdb

migrations:
  name: migration-job
  image: russbalabanov/hw-migrations:v1
  ttlSecondsAfterFinished: 10
  restartPolicy: Never
  backoffLimit: 4

ingress:
  annotations:
    nginx.org/server-snippets: |
      location = /otusapp/ruslan_balabanov {
         rewrite ^ /health;
      }

monitor:
  name: metrics-monitor
  metricsPath: /my-metrics
  scrapeTimeout: 30s

#kube-prometheus-stack:
#  #https://stackoverflow.com/questions/70556984/kubernetes-node-exporter-container-is-not-working-it-shows-this-error-message
#  prometheus-node-exporter:
#    hostRootFsMount:
#      enabled: false
#  grafana:
#    ingress:
#      ingressClassName: nginx
#      enabled: true
#      hosts:
#        - grafana.arch.homework
#  prometheus:
#    serviceMonitor:
#      enabled: true
#      additionalLabels:
#        release: kube-prometheus
#    ingress:
#      ingressClassName: nginx
#      enabled: true
#      hosts:
#        - prometheus.arch.homework
#    prometheusSpec:
#      serviceMonitorSelectorNilUsesHelmValues: false
#      serviceMonitorSelector: {}

nginx-ingress:
  controller:
    enableSnippets: true
    service:
      httpPort:
        port: 2080
